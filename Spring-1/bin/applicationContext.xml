<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	
	<!--  配置Bean 
		class：bean的全类名，通过反射的方式在IOC容器中创建Bean，所以Bean中必须要有无参构造器
		id： 标识容器中的bean,id唯一
	-->
	<bean id="helloWorld" class="com.nupt.wb.HelloWorld">
		<property name="name" value="张萌萌"></property>
	</bean>
	
	
	<!-- 通过构造方法来配置bean的属性   -->
	<bean id="car" class="com.nupt.wb.Car">
		<constructor-arg value="奥迪" index="0"></constructor-arg>
		
		<!-- 如果字面值包含特殊字符可以使用<![CDATA[字面值]]>包裹起来 -->
		<!-- 属性值也可以使用value子节点进行配置 -->
		<constructor-arg index="1">
			<value><![CDATA["上海"]]> </value>
		</constructor-arg>
		<constructor-arg value="300000" type="double"></constructor-arg>
	</bean>
	
	
	<!-- 使用构造器注入属性值时可以指定参数的位置和参数的类型，以区分重载的构造器 -->
	<bean id="car2" class="com.nupt.wb.Car">
		<constructor-arg value="宝马" type="java.lang.String"></constructor-arg>
		<constructor-arg value="北京" type="java.lang.String"></constructor-arg>
		<constructor-arg type="int">
			<value>240</value>
		</constructor-arg>
	</bean>
	
	
	<bean id="person" class="com.nupt.wb.Person">
		<property name="name" value="Tom"></property>
		<property name="age" value="24"></property>
		<!-- 可以使用property的 ref 属性建立bean之间的引用关系 -->
		<!--  <property name="car" ref="car2"></property>  -->
		
		
		<!-- 内部  不能被外部引用，只能在内部使用 -->
		<property name="car">
			<bean class="com.nupt.wb.Car">
				<constructor-arg value="福特"></constructor-arg>
				<constructor-arg value="长安"></constructor-arg>
				<constructor-arg value="200000"></constructor-arg>
			</bean>
		</property>
	</bean>
	
	
	
	<bean id="person2" class="com.nupt.wb.Person">
		<constructor-arg value="Jerry"></constructor-arg>
		<constructor-arg value="26"></constructor-arg>
		<constructor-arg>
			<ref bean="car2"/>
		</constructor-arg>
		<!-- 为级联属性赋值 -->
		<property name="car.maxSpeed" value="250"></property>
	</bean>
	
	
	
	
	<!-- 测试如何配置集合属性 -->
	
	<bean id ="person3" class="com.nupt.spring.bean.collection.Person">
		<property name="name" value="Mike"></property>
		<property name="age" value ="27"></property>
		<property name="cars" >
			<list>
				<ref bean="car"/>
				<ref bean="car2"/>
				<bean class="com.nupt.wb.Car">
					<constructor-arg value="福特"></constructor-arg>
					<constructor-arg value="长安"></constructor-arg>
					<constructor-arg value="200000"></constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
	
	<!-- 配置Map属性值 -->
	
	<bean id="personCar" class="com.nupt.spring.bean.collection.PersonCar">
		<property name="name" value="Rose"></property>
		<property name="age" value="25"></property>
		<property name="cars">
			<map>
				<entry key="AA" value-ref="car"></entry>
				<entry key="BB" value-ref="car2"></entry>
				
			</map>
		
		</property>
	</bean>
	
	
	
	
	<!-- 配置Properties属性值 -->
	
	<bean id="dataSource" class="com.nupt.spring.bean.collection.DataSource">
		<property name="properties">
			<props>
				<prop key="user">root</prop>
				<prop key="password">1234</prop>
				<prop key="jdbcUrl">jdbc:mysql://test</prop>
				<prop key="driverClass">com.mysql.jdbc.Driver</prop>
			</props>
		</property>
	</bean>
	
	
	
	
	<!-- 配置独立的集合bean,以供多个Bean进行引用  需要导入util命名空间-->
	<util:list id="cars">
		<ref bean="car"/>
		<ref bean="car2"/>
	</util:list>
	
	
	<bean id="person4" class="com.nupt.spring.bean.collection.Person">
		<property name="name" value="Jack"></property>
		<property name="age" value="78"></property>
		<property name="cars" ref="cars"></property>
	</bean>
	
	
	
	<!-- 通过p命名空间为Bean属性赋值，需要先导入p命名空间 -->
	<bean id ="person5" class="com.nupt.spring.bean.collection.Person" p:age="30"
	p:name="Queen" p:cars-ref="cars">
		
	</bean>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</beans>
